# Backbone CNN settings
[BACKBONE]
    # Backbone network architecture name
    str-BACKBONE = resnet18

    # Provide a path to backbone weights (with no top) file or ``imagenet``
    # If you want to initialize the backbone with random weights, then use ``None``
    str-BACKBONE_WEIGHTS = imagenet

    # Either 'default' or tuple of layer names
    # For example, if your backbone model is ``vgg16``,
    # tuple-FEATURE_LAYERS = ("block5_conv3", "block4_conv3", "block3_conv3", "block2_conv2", "block1_conv2")
    # which will give the same result as str-FEATURE_LAYERS = default
    str-FEATURE_LAYERS = default

# Input settings
[INPUT]
    # Number of classification classes (including background)
    int-NUM_CLASSES = 13

    # The width and height of the input tensor
    int-IMAGE_WIDTH = 1280
    int-IMAGE_HEIGHT = 384

    # Number of images to train with on each GPU. A 12GB GPU can typically
    # handle 2 images of 1024x1024px.
    # Adjust based on your GPU memory and image sizes. Use the highest
    # number that your GPU can handle for best performance.
    int-IMAGES_PER_GPU = 2
    # List of integer valued IDs of GPUs you want to use.
    list-GPU_IDS = [0]

# The segmentation model to use
[MODEL]
    str-MODEL = fpn
    str-MODE = training

# Mask settings
[MASK]
    # If enabled, resizes instance masks to a smaller size to reduce
    # memory load. Recommended when using high-resolution images.
    bool-USE_MINI_MASK = True

    # (height, width) of the mini-mask
    tuple-MINI_MASK_SHAPE = (150, 500)

# FPN parameters
[FPN]
    # a number of filters in Feature Pyramid Block of FPN
    int-DECODER_PYRAMID_BLOCK_FILTERS = 256

    # if ``True``, ``BatchNormalization`` layer between ``Conv2D`` and ``Activation`` layers is used.
    bool-DECODER_USE_BATCHNORM = True

    # spatial dropout rate for feature pyramid in range (0, 1).
    # or None if you want to omit dropout layer
    float-DECODER_PYRAMID_DROPOUT = 0.4
    
    # final_interpolation: interpolation type for upsampling layers, on of ``nearest``, ``bilinear``.
    str-DECODER_FINAL_INTERPOLATION = bilinear

    # name of one of ``keras.activations`` for last model layer
    # (e.g. ``sigmoid``, ``softmax``, ``linear``).
    str-LAST_ACTIVATION = sigmoid
